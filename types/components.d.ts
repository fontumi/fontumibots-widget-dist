/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from './stencil.core';
import {
  Bot,
} from './utils/interfaces';

export namespace Components {
  interface FontumibotsBubbleButton {
    'color': string;
  }
  interface FontumibotsChatContainer {
    /**
    * Bot
    */
    'bot': Bot;
    'phoneReady': boolean;
  }
  interface FontumibotsChatInput {
    'props': object;
    'type': string;
  }
  interface FontumibotsIconCall {
    /**
    * Icon color
    */
    'fill': string;
  }
  interface FontumibotsIconClose {
    /**
    * Icon color
    */
    'fill': string;
    /**
    * Icon height
    */
    'height': number;
    /**
    * Icon width
    */
    'width': number;
  }
  interface FontumibotsIconEndCall {
    'fill': string;
  }
  interface FontumibotsIconMessages {
    /**
    * Icon color
    */
    'fill': string;
    /**
    * Icon height
    */
    'height': number;
    /**
    * Icon width
    */
    'width': number;
  }
  interface FontumibotsWidget {
    /**
    * Bot unique ID
    */
    'botId': string;
  }
}

declare global {


  interface HTMLFontumibotsBubbleButtonElement extends Components.FontumibotsBubbleButton, HTMLStencilElement {}
  var HTMLFontumibotsBubbleButtonElement: {
    prototype: HTMLFontumibotsBubbleButtonElement;
    new (): HTMLFontumibotsBubbleButtonElement;
  };

  interface HTMLFontumibotsChatContainerElement extends Components.FontumibotsChatContainer, HTMLStencilElement {}
  var HTMLFontumibotsChatContainerElement: {
    prototype: HTMLFontumibotsChatContainerElement;
    new (): HTMLFontumibotsChatContainerElement;
  };

  interface HTMLFontumibotsChatInputElement extends Components.FontumibotsChatInput, HTMLStencilElement {}
  var HTMLFontumibotsChatInputElement: {
    prototype: HTMLFontumibotsChatInputElement;
    new (): HTMLFontumibotsChatInputElement;
  };

  interface HTMLFontumibotsIconCallElement extends Components.FontumibotsIconCall, HTMLStencilElement {}
  var HTMLFontumibotsIconCallElement: {
    prototype: HTMLFontumibotsIconCallElement;
    new (): HTMLFontumibotsIconCallElement;
  };

  interface HTMLFontumibotsIconCloseElement extends Components.FontumibotsIconClose, HTMLStencilElement {}
  var HTMLFontumibotsIconCloseElement: {
    prototype: HTMLFontumibotsIconCloseElement;
    new (): HTMLFontumibotsIconCloseElement;
  };

  interface HTMLFontumibotsIconEndCallElement extends Components.FontumibotsIconEndCall, HTMLStencilElement {}
  var HTMLFontumibotsIconEndCallElement: {
    prototype: HTMLFontumibotsIconEndCallElement;
    new (): HTMLFontumibotsIconEndCallElement;
  };

  interface HTMLFontumibotsIconMessagesElement extends Components.FontumibotsIconMessages, HTMLStencilElement {}
  var HTMLFontumibotsIconMessagesElement: {
    prototype: HTMLFontumibotsIconMessagesElement;
    new (): HTMLFontumibotsIconMessagesElement;
  };

  interface HTMLFontumibotsWidgetElement extends Components.FontumibotsWidget, HTMLStencilElement {}
  var HTMLFontumibotsWidgetElement: {
    prototype: HTMLFontumibotsWidgetElement;
    new (): HTMLFontumibotsWidgetElement;
  };
  interface HTMLElementTagNameMap {
    'fontumibots-bubble-button': HTMLFontumibotsBubbleButtonElement;
    'fontumibots-chat-container': HTMLFontumibotsChatContainerElement;
    'fontumibots-chat-input': HTMLFontumibotsChatInputElement;
    'fontumibots-icon-call': HTMLFontumibotsIconCallElement;
    'fontumibots-icon-close': HTMLFontumibotsIconCloseElement;
    'fontumibots-icon-end-call': HTMLFontumibotsIconEndCallElement;
    'fontumibots-icon-messages': HTMLFontumibotsIconMessagesElement;
    'fontumibots-widget': HTMLFontumibotsWidgetElement;
  }
}

declare namespace LocalJSX {
  interface FontumibotsBubbleButton extends JSXBase.HTMLAttributes<HTMLFontumibotsBubbleButtonElement> {
    'color'?: string;
    'onToggled'?: (event: CustomEvent<any>) => void;
  }
  interface FontumibotsChatContainer extends JSXBase.HTMLAttributes<HTMLFontumibotsChatContainerElement> {
    /**
    * Bot
    */
    'bot'?: Bot;
    'phoneReady'?: boolean;
  }
  interface FontumibotsChatInput extends JSXBase.HTMLAttributes<HTMLFontumibotsChatInputElement> {
    'onSendMessage'?: (event: CustomEvent<any>) => void;
    'props'?: object;
    'type'?: string;
  }
  interface FontumibotsIconCall extends JSXBase.HTMLAttributes<HTMLFontumibotsIconCallElement> {
    /**
    * Icon color
    */
    'fill'?: string;
  }
  interface FontumibotsIconClose extends JSXBase.HTMLAttributes<HTMLFontumibotsIconCloseElement> {
    /**
    * Icon color
    */
    'fill'?: string;
    /**
    * Icon height
    */
    'height'?: number;
    /**
    * Icon width
    */
    'width'?: number;
  }
  interface FontumibotsIconEndCall extends JSXBase.HTMLAttributes<HTMLFontumibotsIconEndCallElement> {
    'fill'?: string;
  }
  interface FontumibotsIconMessages extends JSXBase.HTMLAttributes<HTMLFontumibotsIconMessagesElement> {
    /**
    * Icon color
    */
    'fill'?: string;
    /**
    * Icon height
    */
    'height'?: number;
    /**
    * Icon width
    */
    'width'?: number;
  }
  interface FontumibotsWidget extends JSXBase.HTMLAttributes<HTMLFontumibotsWidgetElement> {
    /**
    * Bot unique ID
    */
    'botId'?: string;
  }

  interface IntrinsicElements {
    'fontumibots-bubble-button': FontumibotsBubbleButton;
    'fontumibots-chat-container': FontumibotsChatContainer;
    'fontumibots-chat-input': FontumibotsChatInput;
    'fontumibots-icon-call': FontumibotsIconCall;
    'fontumibots-icon-close': FontumibotsIconClose;
    'fontumibots-icon-end-call': FontumibotsIconEndCall;
    'fontumibots-icon-messages': FontumibotsIconMessages;
    'fontumibots-widget': FontumibotsWidget;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


